name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-2019
    env:
      libraryName: LspCpp
      mingwTargetZip: LspCpp-${{ github.ref_name }}-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: check mingw version
        run: gcc --version
        
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install boost
        uses: MarkusJx/install-boost@v2.3.0
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here: 
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.78.0
          # OPTIONAL: Specify a custon install location
          boost_install_dir: ${{github.workspace}}
          # OPTIONAL: Specify a platform version
          platform_version: 2019
          # OPTIONAL: Specify a toolset
          toolset: mingw
          link: static
          arch: x86
          # NOTE: If a boost version matching all requirements cannot be found,
          # this build step will fail
        
      - name: cmake
        shell: cmd
        run: cd /d "${{github.workspace}}" && cmake.exe -G "MinGW Makefiles" -DBOOST_ROOT="${{github.workspace}}/boost/boost/lib/cmake/Boost-1.78.0" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX="build/${{ env.libraryName }}" -B./build
        
      - name: cmake install
        shell: cmd
        run: cd /d "${{github.workspace}}\build" && cmake --build . && cmake --install .
        
      - shell: cmd
        run: cd /d "${{github.workspace}}\build" && mkdir "export\network-uri" && xcopy /E /H /Y /C "${{ env.libraryName }}\*" "export\network-uri"
        
      - shell: cmd
        run: cd /d "${{github.workspace}}\build" && mkdir "export\liblspcpp\lib" && xcopy /E /H /Y /C "liblspcpp.a" "export\liblspcpp\lib"
        
      - shell: cmd
        run: cd /d "${{github.workspace}}\build" && mkdir "export\liblspcpp\include" && xcopy /E /H /Y /C "..\include\*" "export\liblspcpp\include"
        
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "${{github.workspace}}/build/export"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{github.workspace}}/build/export/${{ env.mingwTargetZip }}"
          allowUpdates: true
